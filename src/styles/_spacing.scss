$spacing-multiplies: 4;

@function multiply($value) {
  @return $value * $spacing-multiplies;
}

@mixin generate-property($property, $values) {
  @for $index from 1 through length($values) {
    $value: nth($values, $index);

    @if length($value) == 1 {
      .#{$property}-#{$value} {
        #{$property}: multiply($value) + px;
      }
    } @else if(length($value) == 2) {
      .#{$property}-#{nth($value, 1)}-#{nth($value, 2)} {
        #{$property}: multiply(nth($value, 1)) + px multiply(nth($value, 2)) + px;
      }
    } @else {
      @error "Property #{$property} can have a maximum of 2 values.";
    }
  }
}

@include generate-property(margin, (1, 2, 3, 4, (1, 2), (1, 3), (1, 4), (2, 1), (2, 3), (2, 4), (4, 1), (4, 3)));
@include generate-property(margin-top, (1, 2, 3, 4));
@include generate-property(margin-bottom, (1, 2, 3, 4));
@include generate-property(margin-left, (1, 2, 3, 4));
@include generate-property(margin-right, (1, 2, 3, 4));

@include generate-property(padding, (1, 2, 3, 4, (1, 2), (1, 3), (1, 4), (2, 1), (2, 3), (2, 4), (4, 1),(4, 2), (4, 3)));
@include generate-property(padding-top, (1, 2, 3, 4));
@include generate-property(padding-bottom, (1, 2, 3, 4));
@include generate-property(padding-left, (1, 2, 3, 4));
@include generate-property(padding-right, (1, 2, 3, 4));

@include generate-property(gap, (1, 2, 3, 4, (1, 2), (1, 3), (1, 4), (2, 1), (2, 3), (2, 4), (4, 1), (4, 3)));
@include generate-property(row-gap, (1, 2, 3, 4));
@include generate-property(column-gap, (1, 2, 3, 4));
